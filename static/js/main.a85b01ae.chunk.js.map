{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","i","Scroll","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundry","setState","hasError","error","info","this","state","Component","App","onSearchChange","event","console","log","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCWCQ,G,MAhBF,SAACC,GAAU,IAGbC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAaF,EAANG,GACpB,OACI,sBAAKC,UAAU,sDAAf,UAEI,qBAAKC,IAAG,+BAA0BL,EAAMG,GAAhC,YAA8CG,IAAI,WAC1D,gCACI,6BAAKL,IACL,4BAAIC,YCGLK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAQ,cAAC,EAAD,CAAyBT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAAvEM,EAAOI,GAAGT,OAEjC,OACI,8BACKM,KCAEI,EARA,SAACb,GACZ,OACI,qBAAKc,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKjB,EAAMkB,YCGJC,EANG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,KCwBpDI,E,kDAzBX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACD0B,SAAS,CACVC,UAAU,IAHC,E,8DAQDC,EAAOC,GACrBC,KAAKJ,SAAS,CACVC,UAAU,M,+BAKd,OAAIG,KAAKC,MAAMJ,SACJ,0DAEAG,KAAK9B,MAAMkB,a,GAnBHc,aC6DZC,E,kDAtDX,aAAe,IAAD,8BACV,gBAgBJC,eAAiB,SAACC,GACdC,QAAQC,IAAIF,EAAMG,OAAOC,OAEzB,EAAKb,SAAS,CACVN,YAAae,EAAMG,OAAOC,SAnB9B,EAAKR,MAAQ,CACTvB,OAAQ,GACRY,YAAa,IAJP,E,gEAQO,IAAD,OAChBoB,MAAM,8CACD/C,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,UAC1BjD,MAAK,SAAAkD,GACF,EAAKjB,SAAS,CAAElB,OAAQmC,S,+BAc1B,IAAD,OAECC,EAAiBd,KAAKC,MAAMvB,OAAOqC,QAAO,SAAArC,GAC5C,OAAOA,EAAOP,KAAK6C,cAAcC,SAAS,EAAKhB,MAAMX,YAAY0B,kBAGrE,OAAiC,IAA7BhB,KAAKC,MAAMvB,OAAOwC,OACX,oBAAI5C,UAAU,KAAd,wBAGH,sBAAKA,UAAU,qBAAf,UAEI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWiB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UAEI,cAAC,EAAD,CAAU1B,OAAQoC,e,GA5C5BK,IAAMjB,WCCxBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.a85b01ae.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n     //vagy ezt a {name, email, id} lehetne props hely√©re\r\n    //es az majd automatikusan destructolja \r\n    const {name, email, id} = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\r\n            <img src={`https://robohash.org/${props.id}?200x200`} alt='robots'/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n//import robots from './robots'\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return (<Card key={robots[i].id} id={robots[i].id} name={robots[i].name} email={robots[i].email} />);\r\n    });\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '600px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <input type=\"search\" placeholder='search robots' onChange={searchChange}/>\r\n    );\r\n\r\n}\r\nexport default SearchBox;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setState({\r\n            hasError: false\r\n        })\r\n    }\r\n\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good</h1>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React from 'react';\r\nimport './App.css'\r\nimport CardList from '../components/CardList';\r\n//import { robots } from './robots';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                this.setState({ robots: users })\r\n            })\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            searchfield: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n\r\n        if (this.state.robots.length === 0) {\r\n            return <h1 className=\"tc\">Loading...</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc pa2 ba b--green'>\r\n\r\n                    <h1 className=\"f2\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}